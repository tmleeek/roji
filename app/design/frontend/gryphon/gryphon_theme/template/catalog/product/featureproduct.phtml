<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magento.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magento.com for more information.
 *
 * @category    design
 * @package     rwd_default
 * @copyright   Copyright (c) 2006-2014 X.commerce, Inc. (http://www.magento.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<?php
/**
 * Product list template
 *
 * @see Mage_Catalog_Block_Product_List
 */
/* @var $this Mage_Catalog_Block_Product_List */
?>
<?php
    // $_productCollection=$this->getLoadedProductCollection()->addAttributeToSort('pos‌​ition');

    
    $groupname = '';
    if(Mage::getSingleton('customer/session')->isLoggedIn()) {
        $customerData = Mage::getSingleton('customer/session')->getCustomer();
        $customerGroupId = $customerData->getGroupId();
        $groupname = Mage::getModel('customer/group')->load($customerGroupId)->getCustomerGroupCode();  
    }
    if($groupname=='Trader-Temp' || $groupname=='Trader-Regular' || $groupname=='Trader-Priority' || $groupname=='Trader-Premium') $categoryId = 118;        
    else $categoryId = 92;

    $_productCollection = Mage::getModel('catalog/category')->load($categoryId)
                             ->getProductCollection()
                             ->addAttributeToSelect('*')
                             ->addAttributeToFilter('status', 1) // enabled
                             ->addAttributeToFilter('visibility', 4) //visibility in catalog,search
                             ->addAttributeToSort('position', Varien_Data_Collection::SORT_ORDER_ASC);
        $_helper = $this->helper('catalog/output');    

    function isMobile()  
    {  
        $regex_match = "/(nokia|iphone|android|motorola|^mot\-|softbank|foma|docomo|kddi|up\.browser|up\.link|"  
                     . "htc|dopod|blazer|netfront|helio|hosin|huawei|novarra|CoolPad|webos|techfaith|palmsource|"  
                     . "blackberry|alcatel|amoi|ktouch|nexian|samsung|^sam\-|s[cg]h|^lge|ericsson|philips|sagem|wellcom|bunjalloo|maui|"  
                     . "symbian|smartphone|mmp|midp|wap|phone|windows ce|iemobile|^spice|^bird|^zte\-|longcos|pantech|gionee|^sie\-|portalmmm|"  
                     . "jig\s browser|hiptop|^ucweb|^benq|haier|^lct|opera\s*mobi|opera\*mini|320x320|240x320|176x220"  
                     . ")/i";  

        if (preg_match($regex_match, strtolower($_SERVER['HTTP_USER_AGENT']))) {  
            return TRUE;  
        }  

        if ((strpos(strtolower($_SERVER['HTTP_ACCEPT']),'application/vnd.wap.xhtml+xml') > 0) or ((isset($_SERVER['HTTP_X_WAP_PROFILE']) or isset($_SERVER['HTTP_PROFILE'])))) {  
            return TRUE;  
        }      

        $mobile_ua = strtolower(substr($_SERVER['HTTP_USER_AGENT'], 0, 4));  
        $mobile_agents = array(  
            'w3c ','acs-','alav','alca','amoi','audi','avan','benq','bird','blac',  
            'blaz','brew','cell','cldc','cmd-','dang','doco','eric','hipt','inno',  
            'ipaq','java','jigs','kddi','keji','leno','lg-c','lg-d','lg-g','lge-',  
            'maui','maxo','midp','mits','mmef','mobi','mot-','moto','mwbp','nec-',  
            'newt','noki','oper','palm','pana','pant','phil','play','port','prox',  
            'qwap','sage','sams','sany','sch-','sec-','send','seri','sgh-','shar',  
            'sie-','siem','smal','smar','sony','sph-','symb','t-mo','teli','tim-',  
            'tosh','tsm-','upg1','upsi','vk-v','voda','wap-','wapa','wapi','wapp',  
            'wapr','webc','winw','winw','xda ','xda-');  

        if (in_array($mobile_ua,$mobile_agents)) {  
            return TRUE;  
        }  

        if (isset($_SERVER['ALL_HTTP']) && strpos(strtolower($_SERVER['ALL_HTTP']),'OperaMini') > 0) {  
            return TRUE;  
        }  

        return FALSE;  
    }  
?>
<div id="home-tea-item-container">
    <?php $count = 0; ?>
    <?php foreach ($_productCollection as $key => $_product):    
        $_imgSize = 300;
        $_imgSize2x = 600;
        $categoryIds = $_product->getCategoryIds();

        $color_arr = ["#eebec7", "#abc6ca", "#a1b2ca", "#d9d1c3", "#c7b4e3", "#f0a693", "#beced6", "#fed198", "#c2cb7e", "#f9a960", "#fa91a2", "#bac4b8"];        

        $product_name = $_product->getName();

        $product_name = strtolower($product_name);
        $product_name = str_replace(" ", "-", $product_name);
    ?>
    <div class="home-tea-item" data-id="<?php echo $product_name; ?>">
        <div class="home-tea-item-bg" style="background-color: <?php echo $color_arr[$count]; ?>;"></div>
        <div class="home-tea-item-text">
            <?php if(!empty($_product->getData('product_name_in_color'))): ?>
            <h2><?php echo $_product->getData('product_name_in_color') ?></h2>
            <?php else: ?>
            <h2><?php echo $_product->getName(); ?></h2>
            <?php endif; ?>
            <?php 
            if(count($categoryIds) ){
                foreach ($categoryIds as $key => $categoryId) {
                    $_category = Mage::getModel('catalog/category')->load($categoryId);
                    $parent_category = Mage::getModel('catalog/category')->load($categoryId)->getParentCategory();                                                        
                    if($parent_category->getId()==5) { ?>
                        <h5><?php echo $_category->getName(); ?></h5>                        
            <?php   }
                }
            }
            ?>
            
            <p><?php echo $_product->getShortDescription(); ?></p>
            <div class="cta-container">
                <?php if($groupname!=='Trader-Temp' && $groupname!=='Trader-Regular' && $groupname!=='Trader-Priority' && $groupname!=='Trader-Premium'): ?>
                <a id="add-to-cart-<?php echo $product_name; ?>" href="<?php echo $this->getAddToCartUrl($_product) ?>" class="home-page-add-to-cart arrow-cta">add to cart</a>
                <?php endif; ?>
                <a href="#graph/<?php echo $product_name; ?>" class="arrow-cta">see tea layering</a>
            </div>
        </div>
        <div class="home-tea-item-cover"></div>
    </div>
    <?php $count++; ?>
    <?php endforeach; ?>        
</div> <!-- #home-tea-item-container -->
<?php
// Provides a block where additional page components may be attached, primarily good for in-page JavaScript
if ($this->getChild('after')) {
    $_afterChildren = $this->getChild('after')->getSortedChildren();
    foreach ($_afterChildren as $_afterChildName) {
        $_afterChild = $this->getChild('after')->getChild($_afterChildName);
        //set product collection on after blocks
        $_afterChild->setProductCollection($_productCollection);
        // echo $_afterChild->toHtml();
    }
}
?>
<?php 
    $subscription_in_the_cart = 0;
    $allskus = array("SGP-ART-1M", "SGP-ART-3M", "SGP-ART-6M", "SGP-ART-12M", "SGP-GUR-1M", "SGP-GUR-3M", "SGP-GUR-6M", "SGP-GUR-12M","INT-ART-1M", "INT-ART-3M", "INT-ART-6M", "INT-ART-12M", "INT-GUR-1M", "INT-GUR-3M", "INT-GUR-6M", "INT-GUR-12M");
    $quote = Mage::getSingleton('checkout/session')->getQuote();
    foreach ($quote->getAllVisibleItems() as $item) {
        $itemsku = $item->getProduct()->getData('sku');        
        if(in_array($itemsku, $allskus)) {
            $subscription_in_the_cart = 1;
        }
    }

    $gift_in_the_cart = 0;
    $giftsku = array("testGiftCard2");
    foreach ($quote->getAllVisibleItems() as $item) {
        $itemsku = $item->getProduct()->getData('sku');        
        if(in_array($itemsku, $giftsku)) {
            $gift_in_the_cart = 1;
        }   
    }
?>
<script>
$j(document).ready(function($){
    function do_update() {

        jQuery("#desktop-header-cart").find(".cart-count-update").removeClass('animated fadeIn').addClass('animated flipOutX');

        $.ajax({
            url: '/discovertea/index/cartpreview',
            dataType: 'json',
            type : 'get',
            success: function(data){

                // update product count in cart
                $j("#desktop-header-cart").find(".count").text("("+data.cart_qty+")");
                $j("#mobile-header-cart-btn-container").find(".count").text("("+data.cart_qty+")");

                jQuery("#desktop-header-cart").find(".cart-count-update").removeClass('animated flipOutX').addClass('animated fadeIn');
          
            }
        });                     
    }
    $(".home-page-add-to-cart").on("click", function(e){
        e.preventDefault();

        var add_to_cart_url = $(this).attr("href");

        var subscription_in_the_cart = <?php echo $subscription_in_the_cart; ?>;
        var gift_in_the_cart = <?php echo $gift_in_the_cart; ?>;

        if(subscription_in_the_cart == 1) {
            alert("This product cannot be purchased with other items in the cart. Please check out first before making this purchase.")
        } else if(gift_in_the_cart == 1) {
            alert("This product cannot be purchased with other items in the cart. Please check out first before making this purchase.")
        } else {
            $.get( add_to_cart_url, function( data ) {
               do_update();
            });
            // alert("Added to cart.")
        }  
    });
});
</script>